name: Docker Image Build, Test, Scan, and Publish

inputs:
  gitUserName:
    description: "Git username for Docker registry auth"
    required: true
  aproUserName:
    description: "Apro username for scan authentication"
    required: true
  imageUrls:
    description: "Space-separated list of final image URLs to push to"
    required: true
  ignoredSeverities:
    description: "Space-separated severity levels to ignore"
    required: false
    default: ""
  hadolintConfigPath:
    description: "Optional path to hadolint config file"
    required: false
  dockerfilePath:
    description: "Path to Dockerfile for building"
    required: true
    default: "Dockerfile"
  dockerfileTestPath:
    description: "Path to Dockerfile used for testing (Goss)"
    required: true
    default: "test/Dockerfile"
  buildPlatform:
    description: "Optional Docker build platform"
    required: false
  buildArgsFilePath:
    description: "Optional YAML file with Docker build args"
    required: false
    type: string
  kanikoVerbosity:
    description: "Kaniko verbosity"
    required: false
    default: "info"
  createDotNetRC:
    description: "Create .netrc file for Git authentication?"
    required: false
    default: 'false'
  runLint:
    description: "Run Dockerfile linting?"
    required: false
    default: 'true'
  runGossTests:
    description: "Run Goss container tests?"
    required: false
    default: 'false'
  runXrayScan:
    description: "Run Xray security scan?"
    required: false
    default: 'true'
  watches:
    description: "Space-separated list of JFrog watches for Xray scan"
    required: false
    default: ""
  xrayLog:
    description: "JFrog CLI log level for Xray scan"
    required: false
    default: "ERROR"
  gitPatToken:
    description: "Git password for authenticating with the Docker registry or Git source"
    required: true
  aproPassword:
    description: "Password for Apro service (used for Xray scans and registry cleanup)"
    required: true
  kanikoConfigJson:
    description: "Kaniko Docker config.json used for image build and push"
    required: true

runs:
  using: "composite"
  steps:

    - name: Debug
      shell: bash
      run: |
           var1=${{ inputs.gitUserName }}
           if [ -z "$var1" ]; then
             echo "var1 is null (unset), treated as empty"
           else
             echo "var1 is NOT empty"
           fi
           
           if [ -v var1 ]; then
             echo "var1 is SET"
           else
             echo "var1 is NOT SET"
           fi
