name: Docker Image Build, Test, Scan, and Publish

inputs:
  gitUserName:
    description: "Git username for Docker registry auth"
    required: true
  aproUserName:
    description: "Apro username for scan authentication"
    required: true
  imageUrls:
    description: "Space-separated list of final image URLs to push to"
    required: true
  ignoredSeverities:
    description: "Space-separated severity levels to ignore"
    required: false
    default: ""
  hadolintConfigPath:
    description: "Optional path to hadolint config file"
    required: false
  dockerfilePath:
    description: "Path to Dockerfile for building"
    required: true
    default: "Dockerfile"
  dockerfileTestPath:
    description: "Path to Dockerfile used for testing (Goss)"
    required: true
    default: "test/Dockerfile"
  buildPlatform:
    description: "Optional Docker build platform"
    required: false
  buildArgsFilePath:
    description: "Optional YAML file with Docker build args"
    required: false
    type: string
  kanikoVerbosity:
    description: "Kaniko verbosity"
    required: false
    default: "info"
  createDotNetRC:
    description: "Create .netrc file for Git authentication?"
    required: false
    default: 'false'
  runLint:
    description: "Run Dockerfile linting?"
    required: false
    default: 'true'
  runGossTests:
    description: "Run Goss container tests?"
    required: false
    default: 'false'
  runXrayScan:
    description: "Run Xray security scan?"
    required: false
    default: 'true'
  watches:
    description: "Space-separated list of JFrog watches for Xray scan"
    required: false
    default: ""
  xrayLog:
    description: "JFrog CLI log level for Xray scan"
    required: false
    default: "ERROR"
  gitPatToken:
    description: "Git password for authenticating with the Docker registry or Git source"
    required: true
  aproPassword:
    description: "Password for Apro service (used for Xray scans and registry cleanup)"
    required: true
  kanikoConfigJson:
    description: "Kaniko Docker config.json used for image build and push"
    required: true

runs:
  using: "composite"
  steps:

    - name: Checkout Shared Workflow Repository
      uses: actions/checkout@v4
      id: checkout-shared-library
      with:
         repository: 'nmanojorg/RootRepo'
         ref: 'main'
         path: shared-library

    - name: Validate Inputs
      uses: ./.github/actions/validate-inputs
      with:
        actionInputs: >-
          gitUserName=${{ inputs.gitUserName }},
          aproUserName=${{ inputs.aproUserName }},
          imageUrls="${{ inputs.imageUrls }}",
          ignoredSeverities="${{ inputs.ignoredSeverities }}",
          hadolintConfigPath=${{ inputs.hadolintConfigPath }},
          dockerfilePath=${{ inputs.dockerfilePath }},
          dockerfileTestPath=${{ inputs.dockerfileTestPath }},
          buildPlatform=${{ inputs.buildPlatform }},
          buildArgsFilePath=${{ inputs.buildArgsFilePath }},
          kanikoVerbosity=${{ inputs.kanikoVerbosity }},
          createDotNetRC=${{ inputs.createDotNetRC }},
          runLint=${{ inputs.runLint }},
          runGossTests=${{ inputs.runGossTests }},
          runXrayScan=${{ inputs.runXrayScan }},
          watches="${{ inputs.watches }}",
          xrayLog=${{ inputs.xrayLog }},
          gitPatToken=${{ inputs.gitPatToken }},
          aproPassword=${{ inputs.aproPassword }},
          kanikoConfigJson=${{ inputs.kanikoConfigJson }}
    
        requiredInputs: >-
          gitUserName,
          aproUserName,
          imageUrls,
          dockerfilePath,
          dockerfileTestPath,
          gitPatToken,
          aproPassword,
          kanikoConfigJson
    
        optionalInputs: >-
          ignoredSeverities,
          hadolintConfigPath,
          buildPlatform,
          buildArgsFilePath,
          kanikoVerbosity,
          createDotNetRC,
          runLint,
          runGossTests,
          runXrayScan,
          watches,
          xrayLog
    
        filesPathInputs: >-
          hadolintConfigPath,
          dockerfilePath,
          dockerfileTestPath,
          buildArgsFilePath
    
        typeValidations: >-
          booleanString='createDotNetRC runLint runGossTests runXrayScan',
          string='gitUserName aproUserName imageUrls dockerfilePath dockerfileTestPath gitPatToken aproPassword kanikoConfigJson hadolintConfigPath buildPlatform buildArgsFilePath watches xrayLog ignoredSeverities kanikoVerbosity'
    
        rangeValidations: >-
          kanikoVerbosity=info debug warn error
